					                            SQUASH BUG

Name:
    sb - list the ancestors of a process and detect suspected malware process among it(based on option)

Synopsis:
    sb [options] <pid>

Description:
    The command is used for printing the ancestors of a process with 
    given pid until the init process(pid 1).It can also suggest process suspected to be malware among the list of ancestors.

Options:
    --suggest
        Suggest a malware process among the ancestors of process <pid>.

Implementation and Reasoning:
    Finding ancestors of a process:
        Given a process <pid>, the <ppid> (parent process id) of the process was obtained from the “PPid:” field of the file “/proc/<pid>/status”
        (absolute path specified) and was printed along with the name of the process on the shell. This was repeated again for the parent continuing until the init process(pid 1) or kthread process(pid 2) was reached(both have parent pid as 0).

    Heuristic to find malware:
        The proposed method is based on the idea that the root malware keeps spawning new processes after sleeping for some time. Therefore child count of the root malware is continuously increasing. However, the child count can also be high for processes such as the init process and other important processes. Therefore child count divided by non-sleep time(active time)of the process would be able to identify the root malware,though sleeping still keeps spawning new processes (by definition of it). Also, the active time of system level processes such as init will be higher than this malware process.
        Finally, the formula on which the root malware was detected is
        (1 + child_count) / (1 + log(non_sleep_time + 1))
        The process which has the max value of this is printed as the suspected
        process.(1 has been added to deal with the case when the quantities are zero, similarly, 1 has been added to the log value to deal with the case when the log value is 0.)
        
        Log base 10 has been taken on the denominator to dampen the effect of non_sleep_time and child_count. For example, a process who has a child count of 60 and non_sleep_time of 2 unit and another process with child count of 40 and non_sleep time of 1 unit would have the same value of the formula if log is not taken.(60/3 and 40/2).Therefore log is able to provide child count a higher weightage than non_sleep_time.


    Implementation of the --suggest option:
        The child count of the process was obtained by reading the number of space-separated numbers(which correspond to children's PIDs of the process)from the file “/proc/<pid>/task/<pid>/children”.
        The non-sleep time of a process is calculated by the sum of utime+stime from the file “/proc/<pid>/stat”.
        Utime: Amount of time that this process has been scheduled in user mode, measured in clock ticks (divide by sysconf(_SC_CLK_TCK)).
        Stime: Amount of time that this process has been scheduled in kernel mode, measured in clock ticks (divide by sysconf(_SC_CLK_TCK)).

(Reference: GNU manual for proc, https://man7.org/linux/man-pages/man5/proc.5.html)
